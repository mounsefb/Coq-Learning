DIGEST e57f255de9a10eca7cbc856873b1775c
FLF.Poly
R322:326 LF.Lists <> <> lib
ind 1183:1190 <> boollist
constr 1206:1213 <> bool_nil
constr 1219:1227 <> bool_cons
R1234:1237 LF.Basics <> bool ind
binder 1230:1230 <> b:3
R1245:1252 LF.Poly <> boollist:1 ind
binder 1241:1241 <> l:4
scheme 1183:1190 <> boollist_rect
scheme 1183:1190 <> boollist_ind
scheme 1183:1190 <> boollist_rec
scheme 1183:1190 <> boollist_sind
ind 1790:1793 <> list
constr 1818:1820 <> nil
constr 1826:1829 <> cons
binder 1796:1796 <> X:5
R1836:1836 LF.Poly <> X:5 var
binder 1832:1832 <> x:8
R1844:1847 LF.Poly <> list:6 ind
R1849:1849 LF.Poly <> X:5 var
binder 1840:1840 <> l:9
scheme 1790:1793 <> list_rect
scheme 1790:1793 <> list_ind
scheme 1790:1793 <> list_rec
scheme 1790:1793 <> list_sind
R2629:2632 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2618:2621 LF.Poly <> list ind
R3023:3026 LF.Poly <> list ind
R3028:3030 Coq.Init.Datatypes <> nat ind
R3012:3014 LF.Poly <> nil constr
R3016:3018 Coq.Init.Datatypes <> nat ind
R3238:3241 LF.Poly <> list ind
R3243:3245 Coq.Init.Datatypes <> nat ind
R3214:3217 LF.Poly <> cons constr
R3219:3221 Coq.Init.Datatypes <> nat ind
R3226:3228 LF.Poly <> nil constr
R3230:3232 Coq.Init.Datatypes <> nat ind
binder 3608:3608 <> X:10
R3618:3621 LF.Poly <> list ind
R3623:3623 LF.Poly <> X:10 var
R3595:3597 LF.Poly <> nil constr
binder 3864:3864 <> X:11
R3875:3878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3874:3874 LF.Poly <> X:11 var
R3885:3888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3879:3882 LF.Poly <> list ind
R3884:3884 LF.Poly <> X:11 var
R3889:3892 LF.Poly <> list ind
R3894:3894 LF.Poly <> X:11 var
R3850:3853 LF.Poly <> cons constr
R4593:4596 LF.Poly <> list ind
R4598:4600 Coq.Init.Datatypes <> nat ind
R4550:4553 LF.Poly <> cons constr
R4555:4557 Coq.Init.Datatypes <> nat ind
R4562:4565 LF.Poly <> cons constr
R4567:4569 Coq.Init.Datatypes <> nat ind
R4574:4576 LF.Poly <> nil constr
R4578:4580 Coq.Init.Datatypes <> nat ind
def 4769:4774 <> repeat
binder 4777:4777 <> X:12
R4792:4792 LF.Poly <> X:12 var
binder 4788:4788 <> x:13
R4804:4806 Coq.Init.Datatypes <> nat ind
binder 4796:4800 <> count:14
R4811:4814 LF.Poly <> list ind
R4816:4816 LF.Poly <> X:12 var
R4829:4833 LF.Poly <> count:14 var
R4849:4851 LF.Poly <> nil constr
R4853:4853 LF.Poly <> X:12 var
R4859:4859 Coq.Init.Datatypes <> S constr
R4871:4874 LF.Poly <> cons constr
R4876:4876 LF.Poly <> X:12 var
R4878:4878 LF.Poly <> x:13 var
R4881:4886 LF.Poly <> repeat:15 def
R4890:4890 LF.Poly <> x:13 var
R4888:4888 LF.Poly <> X:12 var
def 5057:5068 <> test_repeat1
R5088:5090 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5074:5079 LF.Poly <> repeat def
R5081:5083 Coq.Init.Datatypes <> nat ind
R5091:5094 LF.Poly <> cons constr
R5096:5098 Coq.Init.Datatypes <> nat ind
R5103:5106 LF.Poly <> cons constr
R5108:5110 Coq.Init.Datatypes <> nat ind
R5115:5117 LF.Poly <> nil constr
R5119:5121 Coq.Init.Datatypes <> nat ind
def 5287:5298 <> test_repeat2
R5323:5325 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5304:5309 LF.Poly <> repeat def
R5311:5314 LF.Basics <> bool ind
R5316:5320 LF.Basics <> false constr
R5326:5329 LF.Poly <> cons constr
R5331:5334 LF.Basics <> bool ind
R5336:5340 LF.Basics <> false constr
R5343:5345 LF.Poly <> nil constr
R5347:5350 LF.Basics <> bool ind
mod 5514:5526 <> MumbleGrumble
ind 5540:5545 MumbleGrumble mumble
constr 5561:5561 MumbleGrumble a
constr 5567:5567 MumbleGrumble b
constr 5596:5596 MumbleGrumble c
R5574:5579 LF.Poly <> mumble:17 ind
binder 5570:5570 <> x:19
R5587:5589 Coq.Init.Datatypes <> nat ind
binder 5583:5583 <> y:20
scheme 5540:5545 MumbleGrumble mumble_rect
scheme 5540:5545 MumbleGrumble mumble_ind
scheme 5540:5545 MumbleGrumble mumble_rec
scheme 5540:5545 MumbleGrumble mumble_sind
ind 5610:5616 MumbleGrumble grumble
constr 5641:5641 MumbleGrumble d
constr 5660:5660 MumbleGrumble e
binder 5619:5619 <> X:21
R5648:5653 LF.Poly MumbleGrumble mumble ind
binder 5644:5644 <> m:24
R5667:5667 LF.Poly <> X:21 var
binder 5663:5663 <> x:25
scheme 5610:5616 MumbleGrumble grumble_rect
scheme 5610:5616 MumbleGrumble grumble_ind
scheme 5610:5616 MumbleGrumble grumble_rec
scheme 5610:5616 MumbleGrumble grumble_sind
R6002:6014 LF.Poly MumbleGrumble <> mod
def 6302:6308 <> repeat'
binder 6310:6310 <> X:26
binder 6312:6312 <> x:27
binder 6314:6318 <> count:28
R6322:6325 LF.Poly <> list ind
R6327:6327 LF.Poly <> X:26 var
R6340:6344 LF.Poly <> count:28 var
R6367:6369 LF.Poly <> nil constr
R6371:6371 LF.Poly <> X:26 var
R6377:6377 Coq.Init.Datatypes <> S constr
R6389:6392 LF.Poly <> cons constr
R6394:6394 LF.Poly <> X:26 var
R6396:6396 LF.Poly <> x:27 var
R6399:6405 LF.Poly <> repeat':29 def
R6409:6409 LF.Poly <> x:27 var
R6407:6407 LF.Poly <> X:26 var
binder 6530:6530 <> X:31
R6541:6544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6540:6540 LF.Poly <> X:31 var
R6548:6551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6545:6547 Coq.Init.Datatypes <> nat ind
R6552:6555 LF.Poly <> list ind
R6557:6557 LF.Poly <> X:31 var
R6511:6517 LF.Poly <> repeat' def
binder 6584:6584 <> X:32
R6595:6598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6594:6594 LF.Poly <> X:32 var
R6602:6605 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6599:6601 Coq.Init.Datatypes <> nat ind
R6606:6609 LF.Poly <> list ind
R6611:6611 LF.Poly <> X:32 var
R6566:6571 LF.Poly <> repeat def
def 8835:8842 <> repeat''
binder 8844:8844 <> X:33
binder 8846:8846 <> x:34
binder 8848:8852 <> count:35
R8856:8859 LF.Poly <> list ind
R8861:8861 LF.Poly <> X:33 var
R8874:8878 LF.Poly <> count:35 var
R8901:8903 LF.Poly <> nil constr
R8911:8911 Coq.Init.Datatypes <> S constr
R8923:8926 LF.Poly <> cons constr
R8930:8930 LF.Poly <> x:34 var
R8933:8940 LF.Poly <> repeat'':36 def
R8944:8944 LF.Poly <> x:34 var
def 9262:9268 <> list123
R9275:9278 LF.Poly <> cons constr
R9280:9282 Coq.Init.Datatypes <> nat ind
R9287:9290 LF.Poly <> cons constr
R9292:9294 Coq.Init.Datatypes <> nat ind
R9299:9302 LF.Poly <> cons constr
R9304:9306 Coq.Init.Datatypes <> nat ind
R9311:9313 LF.Poly <> nil constr
R9315:9317 Coq.Init.Datatypes <> nat ind
def 9378:9385 <> list123'
R9392:9395 LF.Poly <> cons constr
R9402:9405 LF.Poly <> cons constr
R9412:9415 LF.Poly <> cons constr
R9422:9424 LF.Poly <> nil constr
R9902:9904 LF.Poly <> nil constr
R9902:9904 LF.Poly <> nil constr
R9921:9924 LF.Poly <> cons constr
R9921:9924 LF.Poly <> cons constr
R9941:9946 LF.Poly <> repeat def
R9941:9946 LF.Poly <> repeat def
def 10043:10051 <> list123''
R10056:10059 LF.Poly <> cons constr
R10064:10067 LF.Poly <> cons constr
R10072:10075 LF.Poly <> cons constr
R10079:10081 LF.Poly <> nil constr
def 10271:10279 <> repeat'''
binder 10282:10282 <> X:38
R10297:10297 LF.Poly <> X:38 var
binder 10293:10293 <> x:39
R10309:10311 Coq.Init.Datatypes <> nat ind
binder 10301:10305 <> count:40
R10316:10319 LF.Poly <> list ind
R10321:10321 LF.Poly <> X:38 var
R10334:10338 LF.Poly <> count:40 var
R10361:10363 LF.Poly <> nil constr
R10369:10369 Coq.Init.Datatypes <> S constr
R10381:10384 LF.Poly <> cons constr
R10389:10397 LF.Poly <> repeat''':41 def
R10399:10399 LF.Poly <> x:39 var
R10386:10386 LF.Poly <> x:39 var
ind 11032:11036 <> list'
constr 11061:11064 <> nil'
constr 11070:11074 <> cons'
binder 11039:11039 <> X:43
R11081:11081 LF.Poly <> X:43 var
binder 11077:11077 <> x:46
R11089:11093 LF.Poly <> list':44 ind
binder 11085:11085 <> l:47
scheme 11032:11036 <> list'_rect
scheme 11032:11036 <> list'_ind
scheme 11032:11036 <> list'_rec
scheme 11032:11036 <> list'_sind
def 11530:11532 <> app
binder 11535:11535 <> X:48
R11554:11557 LF.Poly <> list ind
R11559:11559 LF.Poly <> X:48 var
binder 11546:11547 <> l1:49
binder 11549:11550 <> l2:50
R11564:11567 LF.Poly <> list ind
R11569:11569 LF.Poly <> X:48 var
R11582:11583 LF.Poly <> l1:49 var
R11594:11596 LF.Poly <> nil constr
R11606:11607 LF.Poly <> l2:50 var
R11613:11616 LF.Poly <> cons constr
R11625:11628 LF.Poly <> cons constr
R11633:11635 LF.Poly <> app:51 def
R11639:11640 LF.Poly <> l2:50 var
def 11660:11662 <> rev
binder 11665:11665 <> X:53
R11676:11679 LF.Poly <> list ind
R11681:11681 LF.Poly <> X:53 var
binder 11674:11674 <> l:54
R11686:11689 LF.Poly <> list ind
R11691:11691 LF.Poly <> X:53 var
R11704:11704 LF.Poly <> l:54 var
R11715:11717 LF.Poly <> nil constr
R11727:11729 LF.Poly <> nil constr
R11735:11738 LF.Poly <> cons constr
R11747:11749 LF.Poly <> app def
R11760:11763 LF.Poly <> cons constr
R11767:11769 LF.Poly <> nil constr
R11752:11754 LF.Poly <> rev:55 def
def 11789:11794 <> length
binder 11797:11797 <> X:57
R11812:11815 LF.Poly <> list ind
R11817:11817 LF.Poly <> X:57 var
binder 11808:11808 <> l:58
R11822:11824 Coq.Init.Datatypes <> nat ind
R11837:11837 LF.Poly <> l:58 var
R11848:11850 LF.Poly <> nil constr
R11861:11864 LF.Poly <> cons constr
R11874:11874 Coq.Init.Datatypes <> S constr
R11877:11882 LF.Poly <> length:59 def
def 11904:11912 <> test_rev1
R11943:11946 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11966:11966 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11918:11920 LF.Poly <> rev def
R11923:11926 LF.Poly <> cons constr
R11931:11934 LF.Poly <> cons constr
R11938:11940 LF.Poly <> nil constr
R11947:11950 LF.Poly <> cons constr
R11955:11958 LF.Poly <> cons constr
R11962:11964 LF.Poly <> nil constr
def 12010:12018 <> test_rev2
R12042:12044 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12023:12025 LF.Poly <> rev def
R12028:12031 LF.Poly <> cons constr
R12038:12040 LF.Poly <> nil constr
R12033:12036 LF.Basics <> true constr
R12045:12048 LF.Poly <> cons constr
R12055:12057 LF.Poly <> nil constr
R12050:12053 LF.Basics <> true constr
def 12094:12105 <> test_length1
R12145:12147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12108:12113 LF.Poly <> length def
R12116:12119 LF.Poly <> cons constr
R12124:12127 LF.Poly <> cons constr
R12132:12135 LF.Poly <> cons constr
R12139:12141 LF.Poly <> nil constr
def 12627:12631 <> mynil
R12636:12638 LF.Poly <> nil constr
def 13205:13209 <> mynil
R13213:13216 LF.Poly <> list ind
R13218:13220 Coq.Init.Datatypes <> nat ind
R13225:13227 LF.Poly <> nil constr
binder 13370:13370 <> X:61
R13380:13383 LF.Poly <> list ind
R13385:13385 LF.Poly <> X:61 var
R13357:13359 LF.Poly <> nil constr
def 13400:13405 <> mynil'
R13411:13413 LF.Poly <> nil constr
R13415:13417 Coq.Init.Datatypes <> nat ind
R13427:13432 LF.Poly <> mynil' def
R13714:13717 LF.Poly <> cons constr
not 13701:13701 <> :::x_'::'_x
R13799:13801 LF.Poly <> nil constr
not 13790:13790 <> :::'['_']'
R13834:13837 LF.Poly <> cons constr
R13845:13848 LF.Poly <> cons constr
R13852:13853 LF.Poly <> :::'['_']' not
not 13813:13813 <> :::'['_x_';'_'..'_';'_x_']'
R13883:13885 LF.Poly <> app def
not 13870:13870 <> :::x_'++'_x
def 14018:14027 <> list123'''
R14032:14032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R14034:14035 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R14037:14038 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R14040:14040 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
prf 14349:14357 <> app_nil_r
binder 14369:14369 <> X:62
R14387:14390 LF.Poly <> list ind
R14392:14392 LF.Poly <> X:62 var
binder 14385:14385 <> l:63
R14404:14406 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14398:14401 LF.Poly <> :::x_'++'_x not
R14397:14397 LF.Poly <> l:63 var
R14402:14403 LF.Poly <> :::'['_']' not
R14407:14407 LF.Poly <> l:63 var
R14522:14524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14519:14520 LF.Poly <> :::x_'::'_x not
R14526:14527 LF.Poly <> :::x_'::'_x not
R14531:14534 LF.Poly <> :::x_'++'_x not
R14528:14530 LF.Poly <> nil constr
R14522:14524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14519:14520 LF.Poly <> :::x_'::'_x not
R14526:14527 LF.Poly <> :::x_'::'_x not
R14531:14534 LF.Poly <> :::x_'++'_x not
R14528:14530 LF.Poly <> nil constr
prf 14647:14655 <> app_assoc
binder 14666:14666 <> A:64
R14675:14678 LF.Poly <> list ind
R14680:14680 LF.Poly <> A:64 var
binder 14669:14669 <> l:65
binder 14671:14671 <> m:66
binder 14673:14673 <> n:67
R14697:14699 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14687:14690 LF.Poly <> :::x_'++'_x not
R14686:14686 LF.Poly <> l:65 var
R14692:14695 LF.Poly <> :::x_'++'_x not
R14691:14691 LF.Poly <> m:66 var
R14696:14696 LF.Poly <> n:67 var
R14700:14700 LF.Poly <> :::x_'++'_x not
R14707:14711 LF.Poly <> :::x_'++'_x not
R14702:14705 LF.Poly <> :::x_'++'_x not
R14701:14701 LF.Poly <> l:65 var
R14706:14706 LF.Poly <> m:66 var
R14712:14712 LF.Poly <> n:67 var
prf 14854:14863 <> app_length
binder 14875:14875 <> X:68
R14892:14895 LF.Poly <> list ind
R14897:14897 LF.Poly <> X:68 var
binder 14884:14885 <> l1:69
binder 14887:14888 <> l2:70
R14920:14922 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14903:14908 LF.Poly <> length def
R14913:14916 LF.Poly <> :::x_'++'_x not
R14911:14912 LF.Poly <> l1:69 var
R14917:14918 LF.Poly <> l2:70 var
R14932:14934 LF.Basics <> ::nat_scope:x_'+'_x not
R14923:14928 LF.Poly <> length def
R14930:14931 LF.Poly <> l1:69 var
R14935:14940 LF.Poly <> length def
R14942:14943 LF.Poly <> l2:70 var
prf 15217:15229 <> rev_app_distr
binder 15239:15239 <> X:71
R15250:15253 LF.Poly <> list ind
R15255:15255 LF.Poly <> X:71 var
binder 15242:15243 <> l1:72
binder 15245:15246 <> l2:73
R15275:15277 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15261:15263 LF.Poly <> rev def
R15268:15271 LF.Poly <> :::x_'++'_x not
R15266:15267 LF.Poly <> l1:72 var
R15272:15273 LF.Poly <> l2:73 var
R15284:15287 LF.Poly <> :::x_'++'_x not
R15278:15280 LF.Poly <> rev def
R15282:15283 LF.Poly <> l2:73 var
R15288:15290 LF.Poly <> rev def
R15292:15293 LF.Poly <> l1:72 var
R15381:15389 LF.Poly <> app_nil_r thm
R15381:15389 LF.Poly <> app_nil_r thm
R15381:15389 LF.Poly <> app_nil_r thm
R15440:15448 LF.Poly <> app_assoc thm
R15440:15448 LF.Poly <> app_assoc thm
R15440:15448 LF.Poly <> app_assoc thm
prf 15479:15492 <> rev_involutive
binder 15503:15503 <> X:74
R15524:15527 LF.Poly <> list ind
R15529:15529 LF.Poly <> X:74 var
binder 15520:15520 <> l:75
R15545:15547 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15534:15536 LF.Poly <> rev def
R15539:15541 LF.Poly <> rev def
R15543:15543 LF.Poly <> l:75 var
R15548:15548 LF.Poly <> l:75 var
R15651:15663 LF.Poly <> rev_app_distr thm
R15651:15663 LF.Poly <> rev_app_distr thm
R15651:15663 LF.Poly <> rev_app_distr thm
ind 16008:16011 <> prod
constr 16038:16041 <> pair
binder 16014:16014 <> X:76
binder 16016:16016 <> Y:77
R16048:16048 LF.Poly <> X:76 var
binder 16044:16044 <> x:80
R16056:16056 LF.Poly <> Y:77 var
binder 16052:16052 <> y:81
scheme 16008:16011 <> prod_rect
scheme 16008:16011 <> prod_ind
scheme 16008:16011 <> prod_rec
scheme 16008:16011 <> prod_sind
R16071:16074 LF.Poly <> pair constr
R16071:16074 LF.Poly <> pair constr
R16217:16220 LF.Poly <> pair constr
not 16201:16201 <> :::'('_x_','_x_')'
R16383:16386 LF.Poly <> prod ind
not 16371:16371 <> ::type_scope:x_'*'_x
def 17019:17021 <> fst
binder 17024:17024 <> X:82
binder 17026:17026 <> Y:83
R17042:17044 LF.Poly <> ::type_scope:x_'*'_x not
R17041:17041 LF.Poly <> X:82 var
R17045:17045 LF.Poly <> Y:83 var
binder 17037:17037 <> p:84
R17050:17050 LF.Poly <> X:82 var
R17063:17063 LF.Poly <> p:84 var
R17074:17074 LF.Poly <> :::'('_x_','_x_')' not
R17076:17077 LF.Poly <> :::'('_x_','_x_')' not
R17079:17079 LF.Poly <> :::'('_x_','_x_')' not
def 17105:17107 <> snd
binder 17110:17110 <> X:86
binder 17112:17112 <> Y:87
R17128:17130 LF.Poly <> ::type_scope:x_'*'_x not
R17127:17127 LF.Poly <> X:86 var
R17131:17131 LF.Poly <> Y:87 var
binder 17123:17123 <> p:88
R17136:17136 LF.Poly <> Y:87 var
R17149:17149 LF.Poly <> p:88 var
R17160:17160 LF.Poly <> :::'('_x_','_x_')' not
R17162:17163 LF.Poly <> :::'('_x_','_x_')' not
R17165:17165 LF.Poly <> :::'('_x_','_x_')' not
def 17412:17418 <> combine
binder 17421:17421 <> X:90
binder 17423:17423 <> Y:91
R17439:17442 LF.Poly <> list ind
R17444:17444 LF.Poly <> X:90 var
binder 17434:17435 <> lx:92
R17453:17456 LF.Poly <> list ind
R17458:17458 LF.Poly <> Y:91 var
binder 17448:17449 <> ly:93
R17474:17477 LF.Poly <> list ind
R17481:17481 LF.Poly <> ::type_scope:x_'*'_x not
R17480:17480 LF.Poly <> X:90 var
R17482:17482 LF.Poly <> Y:91 var
R17500:17501 LF.Poly <> ly:93 var
R17496:17497 LF.Poly <> lx:92 var
R17512:17513 LF.Poly <> :::'['_']' not
R17521:17522 LF.Poly <> :::'['_']' not
R17531:17532 LF.Poly <> :::'['_']' not
R17537:17538 LF.Poly <> :::'['_']' not
R17545:17548 LF.Poly <> :::x_'::'_x not
R17554:17557 LF.Poly <> :::x_'::'_x not
R17570:17574 LF.Poly <> :::x_'::'_x not
R17588:17588 LF.Poly <> :::x_'::'_x not
R17564:17564 LF.Poly <> :::'('_x_','_x_')' not
R17566:17567 LF.Poly <> :::'('_x_','_x_')' not
R17569:17569 LF.Poly <> :::'('_x_','_x_')' not
R17575:17581 LF.Poly <> combine:94 def
R18061:18067 LF.Poly <> combine def
R18079:18085 LF.Poly <> combine def
R18093:18093 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18099:18099 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18105:18105 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18110:18110 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18115:18115 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18094:18098 LF.Basics <> false constr
R18100:18104 LF.Basics <> false constr
R18106:18109 LF.Basics <> true constr
R18111:18114 LF.Basics <> true constr
R18087:18087 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18089:18089 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18091:18091 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 18466:18470 <> split
binder 18473:18473 <> X:97
binder 18475:18475 <> Y:98
R18490:18493 LF.Poly <> list ind
R18497:18497 LF.Poly <> ::type_scope:x_'*'_x not
R18496:18496 LF.Poly <> X:97 var
R18498:18498 LF.Poly <> Y:98 var
binder 18486:18486 <> l:99
R18504:18504 LF.Poly <> ::type_scope:x_'*'_x not
R18511:18515 LF.Poly <> ::type_scope:x_'*'_x not
R18522:18522 LF.Poly <> ::type_scope:x_'*'_x not
R18505:18508 LF.Poly <> list ind
R18510:18510 LF.Poly <> X:97 var
R18516:18519 LF.Poly <> list ind
R18521:18521 LF.Poly <> Y:98 var
R18602:18602 LF.Poly <> l:99 var
R18613:18615 LF.Poly <> nil constr
R18620:18620 LF.Poly <> :::'('_x_','_x_')' not
R18624:18625 LF.Poly <> :::'('_x_','_x_')' not
R18629:18629 LF.Poly <> :::'('_x_','_x_')' not
R18621:18623 LF.Poly <> nil constr
R18626:18628 LF.Poly <> nil constr
R18643:18644 LF.Poly <> :::x_'::'_x not
R18635:18635 LF.Poly <> :::'('_x_','_x_')' not
R18638:18639 LF.Poly <> :::'('_x_','_x_')' not
R18642:18642 LF.Poly <> :::'('_x_','_x_')' not
R18650:18650 LF.Poly <> :::'('_x_','_x_')' not
R18670:18671 LF.Poly <> :::'('_x_','_x_')' not
R18691:18691 LF.Poly <> :::'('_x_','_x_')' not
R18653:18655 LF.Poly <> :::x_'::'_x not
R18669:18669 LF.Poly <> :::x_'::'_x not
R18656:18658 LF.Poly <> fst def
R18661:18665 LF.Poly <> split:100 def
R18674:18676 LF.Poly <> :::x_'::'_x not
R18690:18690 LF.Poly <> :::x_'::'_x not
R18677:18679 LF.Poly <> snd def
R18682:18686 LF.Poly <> split:100 def
def 18710:18719 <> test_split
R18751:18753 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18724:18728 LF.Poly <> split def
R18730:18730 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18740:18740 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18750:18750 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18731:18731 LF.Poly <> :::'('_x_','_x_')' not
R18733:18733 LF.Poly <> :::'('_x_','_x_')' not
R18739:18739 LF.Poly <> :::'('_x_','_x_')' not
R18734:18738 LF.Basics <> false constr
R18741:18741 LF.Poly <> :::'('_x_','_x_')' not
R18743:18743 LF.Poly <> :::'('_x_','_x_')' not
R18749:18749 LF.Poly <> :::'('_x_','_x_')' not
R18744:18748 LF.Basics <> false constr
R18754:18754 LF.Poly <> :::'('_x_','_x_')' not
R18760:18760 LF.Poly <> :::'('_x_','_x_')' not
R18774:18774 LF.Poly <> :::'('_x_','_x_')' not
R18755:18755 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18757:18757 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18759:18759 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18761:18761 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18767:18767 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18773:18773 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R18762:18766 LF.Basics <> false constr
R18768:18772 LF.Basics <> false constr
mod 19243:19258 <> OptionPlayground
ind 19272:19277 OptionPlayground option
constr 19302:19305 OptionPlayground Some
constr 19319:19322 OptionPlayground None
binder 19280:19280 <> X:102
R19312:19312 LF.Poly <> X:102 var
binder 19308:19308 <> x:105
scheme 19272:19277 OptionPlayground option_rect
scheme 19272:19277 OptionPlayground option_ind
scheme 19272:19277 OptionPlayground option_rec
scheme 19272:19277 OptionPlayground option_sind
R19336:19339 LF.Poly OptionPlayground Some constr
R19336:19339 LF.Poly OptionPlayground Some constr
R19356:19359 LF.Poly OptionPlayground None constr
R19356:19359 LF.Poly OptionPlayground None constr
R19371:19386 LF.Poly OptionPlayground <> mod
def 19496:19504 <> nth_error
binder 19507:19507 <> X:106
R19522:19525 LF.Poly <> list ind
R19527:19527 LF.Poly <> X:106 var
binder 19518:19518 <> l:107
R19535:19537 Coq.Init.Datatypes <> nat ind
binder 19531:19531 <> n:108
R19561:19566 Coq.Init.Datatypes <> option ind
R19568:19568 LF.Poly <> X:106 var
R19581:19581 LF.Poly <> l:107 var
R19592:19594 LF.Poly <> nil constr
R19599:19602 Coq.Init.Datatypes <> None constr
R19609:19612 LF.Poly <> :::x_'::'_x not
R19625:19625 LF.Poly <> n:108 var
R19649:19649 Coq.Init.Datatypes <> O constr
R19654:19657 Coq.Init.Datatypes <> Some constr
R19678:19678 Coq.Init.Datatypes <> S constr
R19686:19694 LF.Poly <> nth_error:109 def
def 19737:19751 <> test_nth_error1
R19776:19778 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19755:19763 LF.Poly <> nth_error def
R19765:19765 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19767:19767 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19769:19769 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19771:19771 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19773:19773 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19779:19782 Coq.Init.Datatypes <> Some constr
def 19820:19834 <> test_nth_error2
R19859:19861 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19838:19846 LF.Poly <> nth_error def
R19848:19848 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19852:19852 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19856:19856 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19849:19849 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19851:19851 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19853:19853 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19855:19855 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19862:19865 Coq.Init.Datatypes <> Some constr
R19867:19867 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19869:19869 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 19905:19919 <> test_nth_error3
R19941:19943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19923:19931 LF.Poly <> nth_error def
R19933:19933 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19938:19938 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R19934:19937 LF.Basics <> true constr
R19944:19947 Coq.Init.Datatypes <> None constr
def 20210:20217 <> hd_error
binder 20220:20220 <> X:112
R20235:20238 LF.Poly <> list ind
R20240:20240 LF.Poly <> X:112 var
binder 20231:20231 <> l:113
R20245:20250 Coq.Init.Datatypes <> option ind
R20252:20252 LF.Poly <> X:112 var
R20332:20332 LF.Poly <> l:113 var
R20343:20345 LF.Poly <> nil constr
R20350:20353 Coq.Init.Datatypes <> None constr
R20360:20361 LF.Poly <> :::x_'::'_x not
R20367:20370 Coq.Init.Datatypes <> Some constr
binder 20527:20527 <> X:115
R20543:20546 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20537:20540 LF.Poly <> list ind
R20542:20542 LF.Poly <> X:115 var
R20547:20552 Coq.Init.Datatypes <> option ind
R20554:20554 LF.Poly <> X:115 var
R20509:20516 LF.Poly <> hd_error def
def 20566:20579 <> test_hd_error1
R20597:20599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20583:20590 LF.Poly <> hd_error def
R20592:20592 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20594:20594 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20596:20596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20600:20603 Coq.Init.Datatypes <> Some constr
def 20683:20696 <> test_hd_error2
R20719:20722 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20700:20707 LF.Poly <> hd_error def
R20710:20710 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20714:20714 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20718:20718 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20711:20711 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20713:20713 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20715:20715 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20717:20717 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20723:20726 Coq.Init.Datatypes <> Some constr
R20728:20728 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R20730:20730 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 21470:21479 <> doit3times
binder 21482:21482 <> X:116
R21498:21499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21497:21497 LF.Poly <> X:116 var
R21500:21500 LF.Poly <> X:116 var
binder 21493:21493 <> f:117
R21508:21508 LF.Poly <> X:116 var
binder 21504:21504 <> n:118
R21513:21513 LF.Poly <> X:116 var
R21520:21520 LF.Poly <> f:117 var
R21523:21523 LF.Poly <> f:117 var
R21526:21526 LF.Poly <> f:117 var
R21528:21528 LF.Poly <> n:118 var
binder 21707:21707 <> X:119
R21717:21717 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21724:21728 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21719:21722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21718:21718 LF.Poly <> X:119 var
R21723:21723 LF.Poly <> X:119 var
R21730:21733 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21729:21729 LF.Poly <> X:119 var
R21734:21734 LF.Poly <> X:119 var
R21687:21696 LF.Poly <> doit3times def
def 21746:21760 <> test_doit3times
R21784:21786 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21763:21772 LF.Poly <> doit3times def
R21774:21781 LF.Basics <> minustwo def
def 21824:21839 <> test_doit3times'
R21862:21864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21842:21851 LF.Poly <> doit3times def
R21858:21861 LF.Basics <> true constr
R21853:21856 LF.Basics <> negb def
R21865:21869 LF.Basics <> false constr
def 22259:22264 <> filter
binder 22267:22267 <> X:120
R22283:22284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22282:22282 LF.Poly <> X:120 var
R22285:22288 LF.Basics <> bool ind
binder 22276:22279 <> test:121
R22294:22297 LF.Poly <> list ind
R22299:22299 LF.Poly <> X:120 var
binder 22292:22292 <> l:122
R22304:22307 LF.Poly <> list ind
R22309:22309 LF.Poly <> X:120 var
R22322:22322 LF.Poly <> l:122 var
R22333:22334 LF.Poly <> :::'['_']' not
R22339:22340 LF.Poly <> :::'['_']' not
R22347:22350 LF.Poly <> :::x_'::'_x not
R22363:22366 LF.Poly <> test:121 var
R22405:22410 LF.Poly <> filter:123 def
R22412:22415 LF.Poly <> test:121 var
R22376:22380 LF.Poly <> :::x_'::'_x not
R22394:22394 LF.Poly <> :::x_'::'_x not
R22381:22386 LF.Poly <> filter:123 def
R22388:22391 LF.Poly <> test:121 var
def 22595:22606 <> test_filter1
R22630:22632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22609:22614 LF.Poly <> filter def
R22621:22621 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22623:22623 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22625:22625 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22627:22627 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22629:22629 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22616:22619 LF.Basics <> even def
R22633:22633 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22635:22635 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22637:22637 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 22677:22687 <> length_is_1
binder 22690:22690 <> X:125
R22705:22708 LF.Poly <> list ind
R22710:22710 LF.Poly <> X:125 var
binder 22701:22701 <> l:126
R22715:22718 LF.Basics <> bool ind
R22725:22725 LF.Basics <> ::nat_scope:x_'=?'_x not
R22734:22738 LF.Basics <> ::nat_scope:x_'=?'_x not
R22726:22731 LF.Poly <> length def
R22733:22733 LF.Poly <> l:126 var
def 22751:22762 <> test_filter2
R22837:22841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22769:22774 LF.Poly <> filter def
R22799:22800 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22807:22808 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22812:22813 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22817:22818 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22826:22827 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22830:22831 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22835:22836 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22801:22801 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22803:22804 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22806:22806 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22809:22809 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22811:22811 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22814:22814 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22816:22816 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22819:22819 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22821:22821 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22823:22823 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22825:22825 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22828:22829 LF.Poly <> :::'['_']' not
R22832:22832 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22834:22834 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22776:22786 LF.Poly <> length_is_1 def
R22842:22843 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22847:22848 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22852:22853 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22857:22858 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22844:22844 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22846:22846 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22849:22849 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22851:22851 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22854:22854 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R22856:22856 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 23016:23031 <> countoddmembers'
R23036:23039 LF.Poly <> list ind
R23041:23043 Coq.Init.Datatypes <> nat ind
binder 23034:23034 <> l:127
R23048:23050 Coq.Init.Datatypes <> nat ind
R23057:23062 LF.Poly <> length def
R23065:23070 LF.Poly <> filter def
R23076:23076 LF.Poly <> l:127 var
R23072:23074 LF.Basics <> odd def
def 23089:23110 <> test_countoddmembers'1
R23145:23147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23115:23130 LF.Poly <> countoddmembers' def
R23132:23132 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23134:23134 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23136:23136 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23138:23138 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23140:23140 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23142:23142 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23144:23144 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 23184:23205 <> test_countoddmembers'2
R23234:23236 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23210:23225 LF.Poly <> countoddmembers' def
R23227:23227 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23229:23229 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23231:23231 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23233:23233 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 23273:23294 <> test_countoddmembers'3
R23319:23321 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23299:23314 LF.Poly <> countoddmembers' def
R23316:23318 LF.Poly <> nil constr
def 24099:24112 <> test_anon_fun'
R24146:24148 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24117:24126 LF.Poly <> doit3times def
binder 24133:24133 <> n:128
R24139:24141 LF.Basics <> ::nat_scope:x_'*'_x not
R24138:24138 LF.Poly <> n:128 var
R24142:24142 LF.Poly <> n:128 var
def 24388:24400 <> test_filter2'
R24490:24494 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24407:24412 LF.Poly <> filter def
R24452:24453 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24460:24461 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24465:24466 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24470:24471 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24479:24480 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24483:24484 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24488:24489 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24454:24454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24456:24457 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24459:24459 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24462:24462 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24464:24464 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24467:24467 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24469:24469 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24472:24472 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24474:24474 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24476:24476 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24478:24478 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24481:24482 LF.Poly <> :::'['_']' not
R24485:24485 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24487:24487 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 24419:24419 <> l:129
R24424:24424 LF.Basics <> ::nat_scope:x_'=?'_x not
R24433:24437 LF.Basics <> ::nat_scope:x_'=?'_x not
R24425:24430 LF.Poly <> length def
R24432:24432 LF.Poly <> l:129 var
R24495:24496 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24500:24501 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24505:24506 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24510:24511 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24497:24497 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24499:24499 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24502:24502 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24504:24504 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24507:24507 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R24509:24509 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 24820:24834 <> filter_even_gt7
R24841:24844 LF.Poly <> list ind
R24846:24848 Coq.Init.Datatypes <> nat ind
binder 24837:24837 <> l:130
R24853:24856 LF.Poly <> list ind
R24858:24860 Coq.Init.Datatypes <> nat ind
R24934:24939 LF.Poly <> filter def
R24948:24953 LF.Poly <> filter def
R24976:24976 LF.Poly <> l:130 var
binder 24960:24960 <> x:131
R24966:24968 LF.Basics <> leb def
R24972:24972 LF.Poly <> x:131 var
R24941:24944 LF.Basics <> even def
def 24990:25011 <> test_filter_even_gt7_1
R25052:25054 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25017:25031 LF.Poly <> filter_even_gt7 def
R25033:25033 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25035:25035 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25037:25037 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25039:25039 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25041:25041 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25044:25044 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25046:25046 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25049:25049 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25051:25051 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25055:25055 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25058:25058 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25061:25061 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25063:25063 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25131:25145 LF.Poly <> filter_even_gt7 def
R25155:25160 LF.Poly <> filter def
def 25197:25218 <> test_filter_even_gt7_2
R25254:25256 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25224:25238 LF.Poly <> filter_even_gt7 def
R25240:25240 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25242:25242 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25244:25244 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25246:25246 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25249:25249 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25253:25253 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25257:25258 LF.Poly <> :::'['_']' not
R25307:25321 LF.Poly <> filter_even_gt7 def
R25333:25338 LF.Poly <> filter def
def 26001:26009 <> partition
binder 26012:26012 <> X:132
R26052:26055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26051:26051 LF.Poly <> X:132 var
R26056:26059 LF.Basics <> bool ind
binder 26044:26047 <> test:133
R26088:26091 LF.Poly <> list ind
R26093:26093 LF.Poly <> X:132 var
binder 26084:26084 <> l:134
R26123:26125 LF.Poly <> ::type_scope:x_'*'_x not
R26117:26120 LF.Poly <> list ind
R26122:26122 LF.Poly <> X:132 var
R26126:26129 LF.Poly <> list ind
R26131:26131 LF.Poly <> X:132 var
R26205:26205 LF.Poly <> :::'('_x_','_x_')' not
R26219:26220 LF.Poly <> :::'('_x_','_x_')' not
R26254:26254 LF.Poly <> :::'('_x_','_x_')' not
R26206:26211 LF.Poly <> filter def
R26218:26218 LF.Poly <> l:134 var
R26213:26216 LF.Poly <> test:133 var
R26221:26226 LF.Poly <> filter def
R26253:26253 LF.Poly <> l:134 var
binder 26233:26233 <> x:135
R26238:26241 LF.Basics <> negb def
R26244:26247 LF.Poly <> test:133 var
R26249:26249 LF.Poly <> x:135 var
def 26266:26280 <> test_partition1
R26308:26310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26283:26291 LF.Poly <> partition def
R26297:26297 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26299:26299 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26301:26301 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26303:26303 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26305:26305 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26307:26307 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26293:26295 LF.Basics <> odd def
R26311:26311 LF.Poly <> :::'('_x_','_x_')' not
R26319:26320 LF.Poly <> :::'('_x_','_x_')' not
R26326:26326 LF.Poly <> :::'('_x_','_x_')' not
R26312:26312 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26314:26314 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26316:26316 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26318:26318 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26321:26321 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26323:26323 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26325:26325 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26383:26391 LF.Poly <> partition def
R26403:26408 LF.Poly <> filter def
def 26448:26462 <> test_partition2
R26499:26501 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26465:26473 LF.Poly <> partition def
R26492:26492 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26494:26494 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26496:26496 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26498:26498 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 26480:26480 <> x:136
R26485:26489 LF.Basics <> false constr
R26502:26502 LF.Poly <> :::'('_x_','_x_')' not
R26505:26506 LF.Poly <> :::'('_x_','_x_')' not
R26514:26514 LF.Poly <> :::'('_x_','_x_')' not
R26503:26504 LF.Poly <> :::'['_']' not
R26507:26507 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26509:26509 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26511:26511 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26513:26513 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R26571:26579 LF.Poly <> partition def
R26591:26596 LF.Poly <> filter def
def 26796:26798 <> map
binder 26801:26801 <> X:137
binder 26803:26803 <> Y:138
R26819:26820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26818:26818 LF.Poly <> X:137 var
R26821:26821 LF.Poly <> Y:138 var
binder 26814:26814 <> f:139
R26829:26832 LF.Poly <> list ind
R26834:26834 LF.Poly <> X:137 var
binder 26825:26825 <> l:140
R26839:26842 LF.Poly <> list ind
R26844:26844 LF.Poly <> Y:138 var
R26857:26857 LF.Poly <> l:140 var
R26868:26869 LF.Poly <> :::'['_']' not
R26878:26879 LF.Poly <> :::'['_']' not
R26886:26889 LF.Poly <> :::x_'::'_x not
R26895:26895 LF.Poly <> :::x_'::'_x not
R26899:26904 LF.Poly <> :::x_'::'_x not
R26912:26912 LF.Poly <> :::x_'::'_x not
R26896:26896 LF.Poly <> f:139 var
R26905:26907 LF.Poly <> map:141 def
R26909:26909 LF.Poly <> f:139 var
def 27129:27137 <> test_map1
R27171:27173 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27140:27142 LF.Poly <> map def
R27164:27164 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27166:27166 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27168:27168 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27170:27170 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 27149:27149 <> x:143
R27154:27157 Coq.Init.Peano <> plus abbrev
R27161:27161 LF.Poly <> x:143 var
R27174:27174 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27176:27176 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27178:27178 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27180:27180 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 27473:27481 <> test_map2
R27503:27505 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27486:27488 LF.Poly <> map def
R27494:27494 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27496:27496 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27498:27498 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27500:27500 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27502:27502 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27490:27492 LF.Basics <> odd def
R27506:27506 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27512:27512 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27517:27517 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27523:27523 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27528:27528 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27507:27511 LF.Basics <> false constr
R27513:27516 LF.Basics <> true constr
R27518:27522 LF.Basics <> false constr
R27524:27527 LF.Basics <> true constr
def 27716:27724 <> test_map3
R27770:27774 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27731:27733 LF.Poly <> map def
R27761:27761 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27763:27763 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27765:27765 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27767:27767 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27769:27769 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 27740:27740 <> n:144
R27745:27745 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27752:27752 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27758:27758 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27746:27749 LF.Basics <> even def
R27751:27751 LF.Poly <> n:144 var
R27753:27755 LF.Basics <> odd def
R27757:27757 LF.Poly <> n:144 var
R27775:27775 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27788:27788 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27801:27801 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27814:27814 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27827:27827 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27776:27776 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27781:27781 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27787:27787 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27777:27780 LF.Basics <> true constr
R27782:27786 LF.Basics <> false constr
R27789:27789 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27795:27795 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27800:27800 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27790:27794 LF.Basics <> false constr
R27796:27799 LF.Basics <> true constr
R27802:27802 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27807:27807 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27813:27813 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27803:27806 LF.Basics <> true constr
R27808:27812 LF.Basics <> false constr
R27815:27815 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27821:27821 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27826:27826 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R27816:27820 LF.Basics <> false constr
R27822:27825 LF.Basics <> true constr
prf 28097:28103 <> map_dev
binder 28115:28115 <> X:145
binder 28117:28117 <> Y:146
R28133:28136 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28132:28132 LF.Poly <> X:145 var
R28137:28137 LF.Poly <> Y:146 var
binder 28128:28128 <> f:147
R28148:28151 LF.Poly <> list ind
R28153:28153 LF.Poly <> X:145 var
binder 28141:28142 <> l1:148
binder 28144:28145 <> l2:149
R28159:28159 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28174:28177 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28160:28162 LF.Poly <> map def
R28169:28170 LF.Poly <> :::x_'++'_x not
R28167:28168 LF.Poly <> l1:148 var
R28171:28172 LF.Poly <> l2:149 var
R28164:28164 LF.Poly <> f:147 var
R28178:28178 LF.Poly <> :::x_'++'_x not
R28187:28192 LF.Poly <> :::x_'++'_x not
R28201:28201 LF.Poly <> :::x_'++'_x not
R28179:28181 LF.Poly <> map def
R28185:28186 LF.Poly <> l1:148 var
R28183:28183 LF.Poly <> f:147 var
R28193:28195 LF.Poly <> map def
R28199:28200 LF.Poly <> l2:149 var
R28197:28197 LF.Poly <> f:147 var
prf 28318:28324 <> map_rev
binder 28336:28336 <> X:150
binder 28338:28338 <> Y:151
R28354:28357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28353:28353 LF.Poly <> X:150 var
R28358:28358 LF.Poly <> Y:151 var
binder 28349:28349 <> f:152
R28366:28369 LF.Poly <> list ind
R28371:28371 LF.Poly <> X:150 var
binder 28362:28362 <> l:153
R28390:28392 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28377:28379 LF.Poly <> map def
R28384:28386 LF.Poly <> rev def
R28388:28388 LF.Poly <> l:153 var
R28381:28381 LF.Poly <> f:152 var
R28393:28395 LF.Poly <> rev def
R28398:28400 LF.Poly <> map def
R28404:28404 LF.Poly <> l:153 var
R28402:28402 LF.Poly <> f:152 var
R28534:28540 LF.Poly <> map_dev thm
R28534:28540 LF.Poly <> map_dev thm
R28534:28540 LF.Poly <> map_dev thm
def 29055:29062 <> flat_map
binder 29065:29065 <> X:154
binder 29067:29067 <> Y:155
R29081:29084 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29080:29080 LF.Poly <> X:154 var
R29085:29088 LF.Poly <> list ind
R29090:29090 LF.Poly <> Y:155 var
binder 29077:29077 <> f:156
R29097:29100 LF.Poly <> list ind
R29102:29102 LF.Poly <> X:154 var
binder 29094:29094 <> l:157
R29126:29129 LF.Poly <> list ind
R29131:29131 LF.Poly <> Y:155 var
R29211:29211 LF.Poly <> l:157 var
R29222:29224 LF.Poly <> nil constr
R29229:29231 LF.Poly <> nil constr
R29238:29239 LF.Poly <> :::x_'::'_x not
R29245:29245 LF.Poly <> :::x_'++'_x not
R29249:29254 LF.Poly <> :::x_'++'_x not
R29267:29267 LF.Poly <> :::x_'++'_x not
R29246:29246 LF.Poly <> f:156 var
R29255:29262 LF.Poly <> flat_map:158 def
R29264:29264 LF.Poly <> f:156 var
def 29287:29300 <> test_flat_map1
R29340:29344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29305:29312 LF.Poly <> flat_map def
R29333:29333 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29335:29335 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29337:29337 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29339:29339 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
binder 29319:29319 <> n:160
R29324:29324 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29326:29326 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29328:29328 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29330:29330 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29325:29325 LF.Poly <> n:160 var
R29327:29327 LF.Poly <> n:160 var
R29329:29329 LF.Poly <> n:160 var
R29345:29345 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29347:29348 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29350:29351 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29353:29354 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29356:29357 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29359:29360 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29362:29363 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29365:29366 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29368:29369 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29371:29371 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 29580:29589 <> option_map
binder 29592:29592 <> X:161
binder 29594:29594 <> Y:162
R29610:29613 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29609:29609 LF.Poly <> X:161 var
R29614:29614 LF.Poly <> Y:162 var
binder 29605:29605 <> f:163
R29623:29628 Coq.Init.Datatypes <> option ind
R29630:29630 LF.Poly <> X:161 var
binder 29618:29619 <> xo:164
R29657:29662 Coq.Init.Datatypes <> option ind
R29664:29664 LF.Poly <> Y:162 var
R29677:29678 LF.Poly <> xo:164 var
R29689:29692 Coq.Init.Datatypes <> None constr
R29697:29700 Coq.Init.Datatypes <> None constr
R29706:29709 Coq.Init.Datatypes <> Some constr
R29716:29719 Coq.Init.Datatypes <> Some constr
R29722:29722 LF.Poly <> f:163 var
def 30569:30572 <> fold
binder 30575:30575 <> X:166
binder 30577:30577 <> Y:167
R30592:30593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30591:30591 LF.Poly <> X:166 var
R30595:30596 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30594:30594 LF.Poly <> Y:167 var
R30597:30597 LF.Poly <> Y:167 var
binder 30587:30587 <> f:168
R30605:30608 LF.Poly <> list ind
R30610:30610 LF.Poly <> X:166 var
binder 30601:30601 <> l:169
R30618:30618 LF.Poly <> Y:167 var
binder 30614:30614 <> b:170
R30648:30648 LF.Poly <> Y:167 var
R30661:30661 LF.Poly <> l:169 var
R30672:30674 LF.Poly <> nil constr
R30679:30679 LF.Poly <> b:170 var
R30686:30689 LF.Poly <> :::x_'::'_x not
R30695:30695 LF.Poly <> f:168 var
R30700:30703 LF.Poly <> fold:171 def
R30709:30709 LF.Poly <> b:170 var
R30705:30705 LF.Poly <> f:168 var
R31206:31209 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31197:31200 LF.Poly <> list ind
R31202:31205 LF.Basics <> bool ind
R31214:31217 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31210:31213 LF.Basics <> bool ind
R31218:31221 LF.Basics <> bool ind
R31184:31187 LF.Poly <> fold def
R31189:31192 LF.Basics <> andb def
def 31233:31245 <> fold_example1
R31288:31290 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31251:31254 LF.Poly <> fold def
R31284:31287 LF.Basics <> true constr
R31261:31261 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31266:31266 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31271:31271 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31277:31277 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31282:31282 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31262:31265 LF.Basics <> true constr
R31267:31270 LF.Basics <> true constr
R31272:31276 LF.Basics <> false constr
R31278:31281 LF.Basics <> true constr
R31256:31259 LF.Basics <> andb def
R31291:31295 LF.Basics <> false constr
def 31332:31344 <> fold_example2
R31371:31373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31350:31353 LF.Poly <> fold def
R31360:31360 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31362:31362 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31364:31364 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31366:31366 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31368:31368 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31355:31358 Coq.Init.Peano <> mult abbrev
def 31412:31424 <> fold_example3
R31461:31463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31430:31433 LF.Poly <> fold def
R31459:31460 LF.Poly <> :::'['_']' not
R31440:31440 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31444:31444 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31447:31447 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31453:31453 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31457:31457 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31441:31441 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31443:31443 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31445:31446 LF.Poly <> :::'['_']' not
R31448:31448 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31450:31450 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31452:31452 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31454:31454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31456:31456 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31435:31437 LF.Poly <> app def
R31464:31464 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31466:31466 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31468:31468 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31470:31470 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R31472:31472 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 32424:32431 <> constfun
binder 32434:32434 <> X:173
R32447:32447 LF.Poly <> X:173 var
binder 32444:32444 <> x:174
R32455:32458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32452:32454 Coq.Init.Datatypes <> nat ind
R32459:32459 LF.Poly <> X:173 var
R32473:32475 Coq.Init.Datatypes <> nat ind
binder 32471:32471 <> k:175
R32481:32481 LF.Poly <> x:174 var
def 32496:32500 <> ftrue
R32505:32512 LF.Poly <> constfun def
R32514:32517 LF.Basics <> true constr
def 32529:32545 <> constfun_example1
R32556:32558 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32549:32553 LF.Poly <> ftrue def
R32559:32562 LF.Basics <> true constr
def 32599:32615 <> constfun_example2
R32634:32636 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32620:32627 LF.Poly <> constfun def
R32848:32851 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32845:32847 Coq.Init.Datatypes <> nat ind
R32855:32858 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32852:32854 Coq.Init.Datatypes <> nat ind
R32859:32861 Coq.Init.Datatypes <> nat ind
R32838:32841 Coq.Init.Peano <> plus abbrev
def 33444:33448 <> plus3
R33453:33456 Coq.Init.Peano <> plus abbrev
R33478:33481 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33475:33477 Coq.Init.Datatypes <> nat ind
R33482:33484 Coq.Init.Datatypes <> nat ind
R33467:33471 LF.Poly <> plus3 def
def 33496:33505 <> test_plus3
R33519:33521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33512:33516 LF.Poly <> plus3 def
def 33558:33568 <> test_plus3'
R33592:33594 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33574:33583 LF.Poly <> doit3times def
R33585:33589 LF.Poly <> plus3 def
def 33631:33642 <> test_plus3''
R33668:33670 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33647:33656 LF.Poly <> doit3times def
R33659:33662 Coq.Init.Peano <> plus abbrev
mod 33810:33818 <> Exercises
def 34028:34038 Exercises fold_length
binder 34041:34041 <> X:176
R34056:34059 LF.Poly <> list ind
R34061:34061 LF.Poly <> X:176 var
binder 34052:34052 <> l:177
R34066:34068 Coq.Init.Datatypes <> nat ind
R34075:34078 LF.Poly <> fold def
R34097:34097 LF.Poly <> l:177 var
binder 34087:34087 <> n:178
R34092:34092 Coq.Init.Datatypes <> S constr
R34094:34094 LF.Poly <> n:178 var
def 34111:34127 Exercises test_fold_length1
R34150:34152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34131:34141 LF.Poly Exercises fold_length def
R34143:34143 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R34145:34145 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R34147:34147 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R34149:34149 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
prf 34475:34493 Exercises fold_length_correct
binder 34504:34504 <> X:179
R34511:34514 LF.Poly <> list ind
R34516:34516 LF.Poly <> X:179 var
binder 34507:34507 <> l:180
R34535:34537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34522:34532 LF.Poly Exercises fold_length def
R34534:34534 LF.Poly <> l:180 var
R34538:34543 LF.Poly <> length def
R34545:34545 LF.Poly <> l:180 var
def 34738:34745 Exercises fold_map
binder 34748:34748 <> X:181
binder 34750:34750 <> Y:182
R34764:34767 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34763:34763 LF.Poly <> X:181 var
R34768:34768 LF.Poly <> Y:182 var
binder 34760:34760 <> f:183
R34775:34778 LF.Poly <> list ind
R34780:34780 LF.Poly <> X:181 var
binder 34772:34772 <> l:184
R34785:34788 LF.Poly <> list ind
R34790:34790 LF.Poly <> Y:182 var
def 35153:35177 Exercises manual_grade_for_fold_map
R35181:35186 Coq.Init.Datatypes <> option ind
R35192:35192 LF.Poly <> ::type_scope:x_'*'_x not
R35189:35191 Coq.Init.Datatypes <> nat ind
R35193:35198 Coq.Strings.String <> string ind
R35204:35207 Coq.Init.Datatypes <> None constr
def 36527:36536 Exercises prod_curry
binder 36539:36539 <> X:185
binder 36541:36541 <> Y:186
binder 36543:36543 <> Z:187
R36565:36568 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36561:36563 LF.Poly <> ::type_scope:x_'*'_x not
R36560:36560 LF.Poly <> X:185 var
R36564:36564 LF.Poly <> Y:186 var
R36569:36569 LF.Poly <> Z:187 var
binder 36556:36556 <> f:188
R36577:36577 LF.Poly <> X:185 var
binder 36573:36573 <> x:189
R36585:36585 LF.Poly <> Y:186 var
binder 36581:36581 <> y:190
R36590:36590 LF.Poly <> Z:187 var
R36595:36595 LF.Poly <> f:188 var
R36597:36597 LF.Poly <> :::'('_x_','_x_')' not
R36599:36600 LF.Poly <> :::'('_x_','_x_')' not
R36602:36602 LF.Poly <> :::'('_x_','_x_')' not
R36598:36598 LF.Poly <> x:189 var
R36601:36601 LF.Poly <> y:190 var
def 36747:36758 Exercises prod_uncurry
binder 36761:36761 <> X:191
binder 36763:36763 <> Y:192
binder 36765:36765 <> Z:193
R36783:36786 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36782:36782 LF.Poly <> X:191 var
R36788:36791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36787:36787 LF.Poly <> Y:192 var
R36792:36792 LF.Poly <> Z:193 var
binder 36778:36778 <> f:194
R36801:36803 LF.Poly <> ::type_scope:x_'*'_x not
R36800:36800 LF.Poly <> X:191 var
R36804:36804 LF.Poly <> Y:192 var
binder 36796:36796 <> p:195
R36809:36809 LF.Poly <> Z:193 var
def 37017:37026 Exercises test_map1'
R37049:37051 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37029:37031 LF.Poly <> map def
R37042:37042 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37044:37044 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37046:37046 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37048:37048 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37034:37037 Coq.Init.Peano <> plus abbrev
R37052:37052 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37054:37054 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37056:37056 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37058:37058 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R37227:37236 LF.Poly Exercises prod_curry def
R37246:37257 LF.Poly Exercises prod_uncurry prfax
prf 37269:37281 Exercises uncurry_curry
binder 37293:37293 <> X:196
binder 37295:37295 <> Y:197
binder 37297:37297 <> Z:198
R37337:37340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37336:37336 LF.Poly <> X:196 var
R37342:37345 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37341:37341 LF.Poly <> Y:197 var
R37346:37346 LF.Poly <> Z:198 var
binder 37332:37332 <> f:199
binder 37373:37373 <> x:200
binder 37375:37375 <> y:201
R37411:37413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37380:37389 LF.Poly Exercises prod_curry def
R37410:37410 LF.Poly <> y:201 var
R37408:37408 LF.Poly <> x:200 var
R37392:37403 LF.Poly Exercises prod_uncurry prfax
R37405:37405 LF.Poly <> f:199 var
R37414:37414 LF.Poly <> f:199 var
R37418:37418 LF.Poly <> y:201 var
R37416:37416 LF.Poly <> x:200 var
prf 37468:37480 Exercises curry_uncurry
binder 37492:37492 <> X:202
binder 37494:37494 <> Y:203
binder 37496:37496 <> Z:204
R37535:37535 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37541:37545 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37537:37539 LF.Poly <> ::type_scope:x_'*'_x not
R37536:37536 LF.Poly <> X:202 var
R37540:37540 LF.Poly <> Y:203 var
R37546:37546 LF.Poly <> Z:204 var
binder 37531:37531 <> f:205
R37555:37557 LF.Poly <> ::type_scope:x_'*'_x not
R37554:37554 LF.Poly <> X:202 var
R37558:37558 LF.Poly <> Y:203 var
binder 37550:37550 <> p:206
R37593:37595 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37564:37575 LF.Poly Exercises prod_uncurry prfax
R37592:37592 LF.Poly <> p:206 var
R37578:37587 LF.Poly Exercises prod_curry def
R37589:37589 LF.Poly <> f:205 var
R37596:37596 LF.Poly <> f:205 var
R37598:37598 LF.Poly <> p:206 var
def 38203:38233 Exercises manual_grade_for_informal_proof
R38237:38242 Coq.Init.Datatypes <> option ind
R38248:38248 LF.Poly <> ::type_scope:x_'*'_x not
R38245:38247 Coq.Init.Datatypes <> nat ind
R38249:38254 Coq.Strings.String <> string ind
R38260:38263 Coq.Init.Datatypes <> None constr
mod 38727:38732 <> Exercises.Church
def 38746:38749 Exercises.Church cnat
binder 38761:38761 <> X:207
R38771:38771 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38778:38782 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38773:38776 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38772:38772 LF.Poly <> X:207 var
R38777:38777 LF.Poly <> X:207 var
R38784:38787 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38783:38783 LF.Poly <> X:207 var
R38788:38788 LF.Poly <> X:207 var
def 38944:38946 Exercises.Church one
R38950:38953 LF.Poly Exercises.Church cnat def
binder 38965:38965 <> X:208
R38981:38984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38980:38980 LF.Poly <> X:208 var
R38985:38985 LF.Poly <> X:208 var
binder 38976:38976 <> f:209
R38993:38993 LF.Poly <> X:208 var
binder 38989:38989 <> x:210
R38999:38999 LF.Poly <> f:209 var
R39001:39001 LF.Poly <> x:210 var
def 39081:39083 Exercises.Church two
R39087:39090 LF.Poly Exercises.Church cnat def
binder 39102:39102 <> X:211
R39118:39121 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39117:39117 LF.Poly <> X:211 var
R39122:39122 LF.Poly <> X:211 var
binder 39113:39113 <> f:212
R39130:39130 LF.Poly <> X:211 var
binder 39126:39126 <> x:213
R39136:39136 LF.Poly <> f:212 var
R39139:39139 LF.Poly <> f:212 var
R39141:39141 LF.Poly <> x:213 var
def 39321:39324 Exercises.Church zero
R39328:39331 LF.Poly Exercises.Church cnat def
binder 39343:39343 <> X:214
R39359:39362 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39358:39358 LF.Poly <> X:214 var
R39363:39363 LF.Poly <> X:214 var
binder 39354:39354 <> f:215
R39371:39371 LF.Poly <> X:214 var
binder 39367:39367 <> x:216
R39377:39377 LF.Poly <> x:216 var
def 39740:39744 Exercises.Church three
R39748:39751 LF.Poly Exercises.Church cnat def
R39757:39766 LF.Poly <> doit3times def
def 40158:40162 Exercises.Church zero'
R40166:40169 LF.Poly Exercises.Church cnat def
binder 40181:40181 <> X:217
R40200:40203 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40199:40199 LF.Poly <> X:217 var
R40204:40204 LF.Poly <> X:217 var
binder 40192:40195 <> succ:218
R40215:40215 LF.Poly <> X:217 var
binder 40208:40211 <> zero:219
R40221:40224 LF.Poly <> zero:219 var
def 40238:40241 Exercises.Church one'
R40245:40248 LF.Poly Exercises.Church cnat def
binder 40260:40260 <> X:220
R40279:40282 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40278:40278 LF.Poly <> X:220 var
R40283:40283 LF.Poly <> X:220 var
binder 40271:40274 <> succ:221
R40294:40294 LF.Poly <> X:220 var
binder 40287:40290 <> zero:222
R40300:40303 LF.Poly <> succ:221 var
R40305:40308 LF.Poly <> zero:222 var
def 40322:40325 Exercises.Church two'
R40329:40332 LF.Poly Exercises.Church cnat def
binder 40344:40344 <> X:223
R40363:40366 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40362:40362 LF.Poly <> X:223 var
R40367:40367 LF.Poly <> X:223 var
binder 40355:40358 <> succ:224
R40378:40378 LF.Poly <> X:223 var
binder 40371:40374 <> zero:225
R40384:40387 LF.Poly <> succ:224 var
R40390:40393 LF.Poly <> succ:224 var
R40395:40398 LF.Poly <> zero:225 var
def 40518:40534 Exercises.Church zero_church_peano
R40550:40552 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40538:40541 LF.Poly Exercises.Church zero def
R40543:40545 Coq.Init.Datatypes <> nat ind
R40547:40547 Coq.Init.Datatypes <> S constr
R40549:40549 Coq.Init.Datatypes <> O constr
def 40590:40605 Exercises.Church one_church_peano
R40620:40622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40609:40611 LF.Poly Exercises.Church one def
R40613:40615 Coq.Init.Datatypes <> nat ind
R40617:40617 Coq.Init.Datatypes <> S constr
R40619:40619 Coq.Init.Datatypes <> O constr
def 40660:40675 Exercises.Church two_church_peano
R40690:40692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40679:40681 LF.Poly Exercises.Church two def
R40683:40685 Coq.Init.Datatypes <> nat ind
R40687:40687 Coq.Init.Datatypes <> S constr
R40689:40689 Coq.Init.Datatypes <> O constr
def 41745:41747 Exercises.Church scc
R41754:41757 LF.Poly Exercises.Church cnat def
binder 41750:41750 <> n:226
R41762:41765 LF.Poly Exercises.Church cnat def
def 41843:41847 Exercises.Church scc_1
R41859:41861 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41851:41853 LF.Poly Exercises.Church scc prfax
R41855:41858 LF.Poly Exercises.Church zero def
R41862:41864 LF.Poly Exercises.Church one def
def 41912:41916 Exercises.Church scc_2
R41927:41929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41920:41922 LF.Poly Exercises.Church scc prfax
R41924:41926 LF.Poly Exercises.Church one def
R41930:41932 LF.Poly Exercises.Church two def
def 41980:41984 Exercises.Church scc_3
R41995:41997 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41988:41990 LF.Poly Exercises.Church scc prfax
R41992:41994 LF.Poly Exercises.Church two def
R41998:42002 LF.Poly Exercises.Church three def
def 42468:42471 Exercises.Church plus
R42480:42483 LF.Poly Exercises.Church cnat def
binder 42474:42474 <> n:227
binder 42476:42476 <> m:228
R42488:42491 LF.Poly Exercises.Church cnat def
def 42569:42574 Exercises.Church plus_1
R42591:42593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42578:42581 LF.Poly Exercises.Church plus prfax
R42583:42586 LF.Poly Exercises.Church zero def
R42588:42590 LF.Poly Exercises.Church one def
R42594:42596 LF.Poly Exercises.Church one def
def 42644:42649 Exercises.Church plus_2
R42667:42669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42653:42656 LF.Poly Exercises.Church plus prfax
R42658:42660 LF.Poly Exercises.Church two def
R42662:42666 LF.Poly Exercises.Church three def
R42670:42673 LF.Poly Exercises.Church plus prfax
R42675:42679 LF.Poly Exercises.Church three def
R42681:42683 LF.Poly Exercises.Church two def
def 42731:42736 Exercises.Church plus_3
R42767:42769 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42742:42745 LF.Poly Exercises.Church plus prfax
R42748:42751 LF.Poly Exercises.Church plus prfax
R42753:42755 LF.Poly Exercises.Church two def
R42757:42759 LF.Poly Exercises.Church two def
R42762:42766 LF.Poly Exercises.Church three def
R42770:42773 LF.Poly Exercises.Church plus prfax
R42775:42777 LF.Poly Exercises.Church one def
R42780:42783 LF.Poly Exercises.Church plus prfax
R42785:42789 LF.Poly Exercises.Church three def
R42791:42795 LF.Poly Exercises.Church three def
def 43358:43361 Exercises.Church mult
R43370:43373 LF.Poly Exercises.Church cnat def
binder 43364:43364 <> n:229
binder 43366:43366 <> m:230
R43378:43381 LF.Poly Exercises.Church cnat def
def 43459:43464 Exercises.Church mult_1
R43480:43482 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43468:43471 LF.Poly Exercises.Church mult prfax
R43473:43475 LF.Poly Exercises.Church one def
R43477:43479 LF.Poly Exercises.Church one def
R43483:43485 LF.Poly Exercises.Church one def
def 43533:43538 Exercises.Church mult_2
R43570:43572 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43542:43545 LF.Poly Exercises.Church mult prfax
R43547:43550 LF.Poly Exercises.Church zero def
R43553:43556 LF.Poly Exercises.Church plus prfax
R43558:43562 LF.Poly Exercises.Church three def
R43564:43568 LF.Poly Exercises.Church three def
R43573:43576 LF.Poly Exercises.Church zero def
def 43624:43629 Exercises.Church mult_3
R43647:43649 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43633:43636 LF.Poly Exercises.Church mult prfax
R43638:43640 LF.Poly Exercises.Church two def
R43642:43646 LF.Poly Exercises.Church three def
R43650:43653 LF.Poly Exercises.Church plus prfax
R43655:43659 LF.Poly Exercises.Church three def
R43661:43665 LF.Poly Exercises.Church three def
def 44072:44074 Exercises.Church exp
R44083:44086 LF.Poly Exercises.Church cnat def
binder 44077:44077 <> n:231
binder 44079:44079 <> m:232
R44091:44094 LF.Poly Exercises.Church cnat def
def 44172:44176 Exercises.Church exp_1
R44191:44193 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44180:44182 LF.Poly Exercises.Church exp prfax
R44184:44186 LF.Poly Exercises.Church two def
R44188:44190 LF.Poly Exercises.Church two def
R44194:44197 LF.Poly Exercises.Church plus prfax
R44199:44201 LF.Poly Exercises.Church two def
R44203:44205 LF.Poly Exercises.Church two def
def 44253:44257 Exercises.Church exp_2
R44275:44277 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44261:44263 LF.Poly Exercises.Church exp prfax
R44265:44269 LF.Poly Exercises.Church three def
R44271:44274 LF.Poly Exercises.Church zero def
R44278:44280 LF.Poly Exercises.Church one def
def 44328:44332 Exercises.Church exp_3
R44349:44351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44336:44338 LF.Poly Exercises.Church exp prfax
R44340:44344 LF.Poly Exercises.Church three def
R44346:44348 LF.Poly Exercises.Church two def
R44352:44355 LF.Poly Exercises.Church plus prfax
R44358:44361 LF.Poly Exercises.Church mult prfax
R44363:44365 LF.Poly Exercises.Church two def
R44368:44371 LF.Poly Exercises.Church mult prfax
R44373:44375 LF.Poly Exercises.Church two def
R44377:44379 LF.Poly Exercises.Church two def
R44383:44385 LF.Poly Exercises.Church one def
R44440:44445 LF.Poly Exercises.Church <> mod
R44452:44460 LF.Poly Exercises <> mod
